[{"/Users/chrisbanas/Desktop/ManagerSystem/src/index.js":"1","/Users/chrisbanas/Desktop/ManagerSystem/src/reportWebVitals.js":"2","/Users/chrisbanas/Desktop/ManagerSystem/src/App.js":"3","/Users/chrisbanas/Desktop/ManagerSystem/src/serviceWorkerRegistration.js":"4","/Users/chrisbanas/Desktop/ManagerSystem/src/StarterPage.js":"5","/Users/chrisbanas/Desktop/ManagerSystem/src/TableRow.js":"6","/Users/chrisbanas/Desktop/ManagerSystem/src/AddButton.js":"7","/Users/chrisbanas/Desktop/ManagerSystem/src/EditButton.js":"8"},{"size":864,"mtime":1605752269965,"results":"9","hashOfConfig":"10"},{"size":364,"mtime":1605132285828,"results":"11","hashOfConfig":"10"},{"size":203,"mtime":1607828807455,"results":"12","hashOfConfig":"10"},{"size":5064,"mtime":1605132285829,"results":"13","hashOfConfig":"10"},{"size":4724,"mtime":1608512615849,"results":"14","hashOfConfig":"10"},{"size":656,"mtime":1608513201567,"results":"15","hashOfConfig":"10"},{"size":3368,"mtime":1608496354251,"results":"16","hashOfConfig":"10"},{"size":4217,"mtime":1608513433114,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"prf44i",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},"/Users/chrisbanas/Desktop/ManagerSystem/src/index.js",[],["38","39"],"/Users/chrisbanas/Desktop/ManagerSystem/src/reportWebVitals.js",[],"/Users/chrisbanas/Desktop/ManagerSystem/src/App.js",[],"/Users/chrisbanas/Desktop/ManagerSystem/src/serviceWorkerRegistration.js",[],"/Users/chrisbanas/Desktop/ManagerSystem/src/StarterPage.js",["40","41","42","43","44","45","46","47"],"import React from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Table,\n    FormGroup, CardFooter\n} from \"reactstrap\";\nimport TableRow from \"./TableRow\";\nimport AddButton from \"./AddButton\";\nclass StarterPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state={\n            employeeList : [],\n            addModal : false\n        }\n    }\n    fetchData = () => {\n         fetch('/getAllEmployees')\n         .then(response => response.json())\n         .then (jsonOutput => {\n             this.setState({\n                employeeList : jsonOutput\n            })\n         })\n    }\n\n    componentDidMount(){\n        this.fetchData();\n    }\n\n    addHandler = (props) => {\n        const URL = '/createEmployee'\n        fetch(URL,{\n            method : 'POST',\n            body : JSON.stringify({\n                department : props.textDepartment,\n                firstName : props.textFirst,\n                lastName : props.textLast,\n                birthYear : props.textYear,\n                phoneNumber : props.textPhone\n            }),\n            headers:{\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }).then(response=>{\n            return response.json()\n        }).then(json =>{\n            //update the courses with the updated DB information\n            //console.log(\"json response\")\n            //console.log(json)\n            this.setState({\n                employeeList : this.state.employeeList.concat([json])\n            })\n            this.fetchData()\n        })\n    }\n    updateEmployee = (hashCode, props) =>{\n        const URL = '/updateEmployee/'+hashCode\n        fetch(URL,{\n            method : 'PUT',\n            body : JSON.stringify({\n                department : props.textDepartment,\n                firstName : props.textFirst,\n                lastName : props.textLast,\n                birthYear : props.textYear,\n                phoneNumber : props.textPhone\n            }),\n            headers:{\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }).then(response=>{\n            return response.json()\n        }).then(json =>{\n            //update the courses with the updated DB information\n            console.log(\"updating data\")\n            this.fetchData()\n        })\n    }\n\n    editHandler = (props) =>{\n        const URL = '/hashEmployee'\n        fetch(URL,{\n            method : 'POST',\n            body : JSON.stringify({\n                firstName : props.originalFirst,\n                lastName : props.originalLast,\n                birthYear : props.originalYear,\n                phoneNumber : props.originalPhone\n            }),\n            headers:{\n                \"Content-type\":\"application/json; charset=UTF-8\"\n            }\n        }).then(response=>{\n            return response.json()\n        }).then(json =>{\n            //update the courses with the updated DB information\n            this.updateEmployee(json, props)\n        })\n    }\n\n    render() {\n        console.log(this.state.employeeList)\n        return(\n            <div>\n                <Card className = \"mb-4\">\n                    <CardHeader as={\"h5\"} className = \"text-center text-md-center\">\n                        Employee List\n                    </CardHeader>\n                    <CardBody>\n                        <Table striped>\n                            <thead>\n                                <tr>\n                                    <th className={\"text-left text-md-left\"}> </th>\n                                    <th className={\"text-left text-md-left\"}>Last name</th>\n                                    <th className={\"text-left text-md-left\"}>First name</th>\n                                    <th className={\"text-left text-md-left\"}>Information</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            {this.state.employeeList.map((list,i) =>{\n                                console.log(\"list loop\")\n                                console.log(this.state.employeeList)\n                                console.log(list)\n                                return <TableRow infoList={list} callParent={this.editHandler}/>\n                            })}\n                            </tbody>\n                        </Table>\n                    </CardBody>\n                    <CardFooter>\n                        <AddButton callParent={this.addHandler}/>\n                    </CardFooter>\n                </Card>\n            </div>\n        );\n    }\n}\n\nexport default StarterPage;\n\n","/Users/chrisbanas/Desktop/ManagerSystem/src/TableRow.js",[],"/Users/chrisbanas/Desktop/ManagerSystem/src/AddButton.js",["48"],"import React from 'react';\nimport {Button, CardFooter, FormGroup, Input, Label, Modal, ModalBody, ModalFooter, ModalHeader} from \"reactstrap\";\n\nclass AddButton extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal : false,\n            textLast : \"\",\n            textFirst : \"\",\n            textYear : \"\",\n            textPhone : \"\",\n            textDepartment : \"\",\n        }\n    }\n\n    updateLastName = (e) => {\n        this.setState({textLast: e.target.value})\n    }\n\n    updateFirstName = (e) => {\n        this.setState({textFirst: e.target.value})\n    }\n\n    updateBirthYear = (e) => {\n        this.setState({textYear: e.target.value})\n    }\n\n    updatePhoneNumber = (e) => {\n        this.setState({textPhone: e.target.value})\n    }\n\n    updateDepartment = (e) => {\n        this.setState({textDepartment: e.target.value})\n    }\n\n    updateDatabase = () =>{\n        this.setState({\n            showModal : false,\n        })\n        this.props.callParent(this.state);\n    }\n    updateModal=()=>{\n        this.setState({\n            showModal : false,\n            textLast : \"\",\n            textFirst : \"\",\n            textYear : \"\",\n            textPhone : \"\",\n            textDepartment : \"\",\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button normal color=\"primary\" onClick={()=>this.setState({showModal : true})}>Add Employee</Button>\n                <Modal isOpen={this.state.showModal}>\n                    <ModalHeader>\n                        Add Employee\n                    </ModalHeader>\n                    <ModalBody>\n                        <Label for=\"lastName\">Last Name</Label>\n                        <Input id=\"lastName\" type='text' onChange={this.updateLastName}/>\n                        <Label for=\"firstName\">First Name</Label>\n                        <Input id=\"firstName\" type='text' onChange={this.updateFirstName}/>\n                        <Label for=\"birthYear\">Birth Year</Label>\n                        <Input id=\"birthYear\" type='text' onChange={this.updateBirthYear}/>\n                        <Label for=\"phoneNumber\">Phone Number</Label>\n                        <Input id=\"phoneNumber\" type='text' onChange={this.updatePhoneNumber}/>\n                        <FormGroup>\n                            <Label for=\"department\">Department</Label>\n                            <Input type=\"select\" name=\"departmentInput\" id=\"department\" onChange={this.updateDepartment}>\n                                <option>Baker</option>\n                                <option>Cleaner</option>\n                                <option>Cook</option>\n                                <option>Delivery</option>\n                                <option>Greeter</option>\n                                <option>Manager</option>\n                                <option>Waiter / Waitress</option>\n                            </Input>\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={()=>this.updateDatabase()}>Ok</Button>\n                        <Button color=\"secondary\" onClick={() => this.updateModal()}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\n\nexport default AddButton;","/Users/chrisbanas/Desktop/ManagerSystem/src/EditButton.js",["49","50","51","52","53"],"import React from 'react';\nimport {\n    Button,\n    Card,\n    CardBody,\n    CardHeader,\n    Input,\n    Label,\n    Modal,\n    ModalBody,\n    ModalFooter,\n    ModalHeader,\n    Table,\n    FormGroup, CardFooter\n} from \"reactstrap\";\n\nclass EditButton extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            showModal : false,\n            textLast : props.infoList[4],\n            textFirst : props.infoList[3],\n            textYear : props.infoList[5],\n            textPhone : props.infoList[6],\n            textDepartment : props.infoList[2],\n            originalLast : props.infoList[4],\n            originalFirst : props.infoList[3],\n            originalYear : props.infoList[5],\n            originalPhone : props.infoList[6],\n            originalDepartment : props.infoList[2],\n        }\n    }\n\n    updateLastName = (e) => {\n        this.setState({textLast: e.target.value})\n    }\n\n    updateFirstName = (e) => {\n        this.setState({textFirst: e.target.value})\n    }\n\n    updateBirthYear = (e) => {\n        this.setState({textYear: e.target.value})\n    }\n\n    updatePhoneNumber = (e) => {\n        this.setState({textPhone: e.target.value})\n    }\n\n    updateDepartment = (e) => {\n        this.setState({textDepartment: e.target.value})\n    }\n\n    updateDB = () =>{\n        this.setState({\n            showModal : false,\n            originalLast : this.state.textLast,\n            originalFirst : this.state.textFirst,\n            originalYear : this.state.textYear,\n            originalPhone : this.state.textPhone,\n            originalDepartment : this.state.textDepartment,\n\n        })\n        this.props.callParent(this.state);\n    }\n\n    updateModal=()=>{\n        this.setState({\n            showModal : false,\n            textLast : this.state.originalLast,\n            textFirst : this.state.originalFirst,\n            textYear : this.state.originalYear,\n            textPhone : this.state.originalPhone,\n            textDepartment : this.state.originalDepartment\n        })\n    }\n\n    render() {\n        return (\n            <div>\n                <Button normal onClick={()=>this.setState({showModal : true})}>Edit</Button>\n                <Modal isOpen={this.state.showModal}>\n                    <ModalHeader>\n                        Edit Employee\n                    </ModalHeader>\n                    <ModalBody>\n                        <Label for=\"editLast\">Last Name</Label>\n                        <Input id=\"editLast\" type='text' value={this.state.textLast} onChange={this.updateLastName}/>\n                        <Label for=\"editFirst\">First Name</Label>\n                        <Input id=\"editFirst\" type='text' value={this.state.textFirst} onChange={this.updateFirstName}/>\n                        <Label for=\"editYear\">Birth Year</Label>\n                        <Input id=\"editYear\" type='text' value={this.state.textYear} onChange={this.updateBirthYear}/>\n                        <Label for=\"editPhone\">Phone Number</Label>\n                        <Input id=\"editPhone\" type='text' value={this.state.textPhone} onChange={this.updatePhoneNumber}/>\n                        <FormGroup>\n                            <Label for=\"editDepartment\">Department</Label>\n                            <Input type=\"select\" name=\"editDepartInfo\" id=\"editDepartment\" onChange={this.updateDepartment}>\n                                <option>Baker</option>\n                                <option>Cleaner</option>\n                                <option>Cook</option>\n                                <option>Delivery</option>\n                                <option>Greeter</option>\n                                <option>Manager</option>\n                                <option>Waiter / Waitress</option>\n                            </Input>\n                        </FormGroup>\n                    </ModalBody>\n                    <ModalFooter>\n                        <Button color=\"primary\" onClick={()=>this.updateDB()}>Ok</Button>\n                        <Button color=\"secondary\" onClick={() => this.updateModal()}>Cancel</Button>\n                    </ModalFooter>\n                </Modal>\n            </div>\n        );\n    }\n}\nexport default EditButton;",{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":3,"column":5,"nodeType":"60","messageId":"61","endLine":3,"endColumn":11},{"ruleId":"58","severity":1,"message":"62","line":7,"column":5,"nodeType":"60","messageId":"61","endLine":7,"endColumn":10},{"ruleId":"58","severity":1,"message":"63","line":8,"column":5,"nodeType":"60","messageId":"61","endLine":8,"endColumn":10},{"ruleId":"58","severity":1,"message":"64","line":9,"column":5,"nodeType":"60","messageId":"61","endLine":9,"endColumn":10},{"ruleId":"58","severity":1,"message":"65","line":10,"column":5,"nodeType":"60","messageId":"61","endLine":10,"endColumn":14},{"ruleId":"58","severity":1,"message":"66","line":11,"column":5,"nodeType":"60","messageId":"61","endLine":11,"endColumn":16},{"ruleId":"58","severity":1,"message":"67","line":12,"column":5,"nodeType":"60","messageId":"61","endLine":12,"endColumn":16},{"ruleId":"58","severity":1,"message":"68","line":14,"column":5,"nodeType":"60","messageId":"61","endLine":14,"endColumn":14},{"ruleId":"58","severity":1,"message":"69","line":2,"column":17,"nodeType":"60","messageId":"61","endLine":2,"endColumn":27},{"ruleId":"58","severity":1,"message":"70","line":4,"column":5,"nodeType":"60","messageId":"61","endLine":4,"endColumn":9},{"ruleId":"58","severity":1,"message":"71","line":5,"column":5,"nodeType":"60","messageId":"61","endLine":5,"endColumn":13},{"ruleId":"58","severity":1,"message":"72","line":6,"column":5,"nodeType":"60","messageId":"61","endLine":6,"endColumn":15},{"ruleId":"58","severity":1,"message":"73","line":13,"column":5,"nodeType":"60","messageId":"61","endLine":13,"endColumn":10},{"ruleId":"58","severity":1,"message":"69","line":14,"column":16,"nodeType":"60","messageId":"61","endLine":14,"endColumn":26},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'Input' is defined but never used.","'Label' is defined but never used.","'Modal' is defined but never used.","'ModalBody' is defined but never used.","'ModalFooter' is defined but never used.","'ModalHeader' is defined but never used.","'FormGroup' is defined but never used.","'CardFooter' is defined but never used.","'Card' is defined but never used.","'CardBody' is defined but never used.","'CardHeader' is defined but never used.","'Table' is defined but never used.","no-global-assign","no-unsafe-negation"]